// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using VFi.Domain.PIM.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace VFi.Infra.PIM.Mappings.Configurations
{
    public partial class ProductConfiguration : IEntityTypeConfiguration<Product>
    {
        public void Configure(EntityTypeBuilder<Product> entity)
        {
            entity.ToTable("Product", "pim");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.Property(e => e.AdditionalShippingCharge).HasColumnType("decimal(18, 4)");

            entity.Property(e => e.Brand).HasMaxLength(255);

            entity.Property(e => e.CanReturn).HasDefaultValueSql("((0))");

            entity.Property(e => e.CategoryRoot).HasMaxLength(250);

            entity.Property(e => e.Code).HasMaxLength(50);

            entity.Property(e => e.Combinations).HasMaxLength(500);

            entity.Property(e => e.Condition).HasComment("New = 0, Refurbished = 10, Used = 20, Damaged = 30");

            entity.Property(e => e.CreatedByName).HasMaxLength(255);

            entity.Property(e => e.CreatedDate).HasColumnType("datetime");

            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.CurrencyCost)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.CustomsTariffNumber)
                .HasMaxLength(30)
                .HasComment("Số thế hải quan");

            entity.Property(e => e.DeletedDate).HasColumnType("datetime");

            entity.Property(e => e.ForBuy).HasDefaultValueSql("((1))");

            entity.Property(e => e.ForProduction).HasDefaultValueSql("((1))");

            entity.Property(e => e.ForSale).HasDefaultValueSql("((1))");

            entity.Property(e => e.GroupCategories)
                .HasMaxLength(1000)
                .IsUnicode(false);

            entity.Property(e => e.Gtin)
                .HasMaxLength(400)
                .HasComment("GTIN (global trade item number)");

            entity.Property(e => e.HasTierPrices).HasDefaultValueSql("((0))");

            entity.Property(e => e.Height).HasColumnType("numeric(18, 5)");

            entity.Property(e => e.IdCategories)
                .HasMaxLength(500)
                .IsUnicode(false);

            entity.Property(e => e.IdGroupCategories)
                .HasMaxLength(500)
                .IsUnicode(false);

            entity.Property(e => e.Image).HasMaxLength(255);

            entity.Property(e => e.IsEsd)
                .HasDefaultValueSql("((0))")
                .HasComment("Is Electronic Service");

            entity.Property(e => e.IsFreeShipping).HasDefaultValueSql("((0))");

            entity.Property(e => e.IsQc)
                .HasColumnName("IsQC")
                .HasComment("Khi mua hàng về, làm đề nghị nhập có phải kiểm tra QC không: 1 - Có. 0 - Không");

            entity.Property(e => e.IsShipEnabled).HasDefaultValueSql("((1))");

            entity.Property(e => e.IsTaxExempt).HasDefaultValueSql("((0))");

            entity.Property(e => e.Length).HasColumnType("numeric(18, 5)");

            entity.Property(e => e.LimitedToStores)
                .HasMaxLength(500)
                .IsUnicode(false);

            entity.Property(e => e.ManageInventoryMethodId)
                .HasColumnType("numeric(18, 5)")
                .HasDefaultValueSql("((0))")
                .HasComment("Manage inventory method");

            entity.Property(e => e.Manufacturer).HasMaxLength(255);

            entity.Property(e => e.ManufacturerNumber)
                .HasMaxLength(400)
                .HasComment("Mã số linh kiện của nhà sản xuất");

            entity.Property(e => e.Name).HasMaxLength(400);

            entity.Property(e => e.OrderMaximumQuantity).HasColumnType("numeric(18, 5)");

            entity.Property(e => e.OrderMinimumQuantity).HasColumnType("numeric(18, 5)");

            entity.Property(e => e.Origin).HasMaxLength(255);

            entity.Property(e => e.Packages)
                .HasDefaultValueSql("((1))")
                .HasComment("Số kiện");

            entity.Property(e => e.PlannedQuantity)
                .HasColumnType("numeric(18, 5)")
                .HasDefaultValueSql("((0))")
                .HasComment("Số lượng kế hoạch");

            entity.Property(e => e.Price).HasColumnType("money");

            entity.Property(e => e.ProductCost).HasColumnType("money");

            entity.Property(e => e.ProductType)
                .HasMaxLength(250)
                .HasComment("SimpleProduct = 0, GroupedProduct = 10, Reservation = 20, BundledProduct = 30, Auction = 40");

            entity.Property(e => e.QuantityStep)
                .HasColumnType("numeric(18, 5)")
                .HasComment("Bước số lượng");

            entity.Property(e => e.ReservedQuantity)
                .HasColumnType("numeric(18, 5)")
                .HasDefaultValueSql("((0))")
                .HasComment("Số lượng đặt trước");

            entity.Property(e => e.ShortDescription).HasMaxLength(4000);

            entity.Property(e => e.Sku).HasMaxLength(400);

            entity.Property(e => e.SourceCode).HasMaxLength(250);

            entity.Property(e => e.SourceLink).HasMaxLength(250);

            entity.Property(e => e.StockQuantity)
                .HasColumnType("numeric(18, 5)")
                .HasDefaultValueSql("((0))")
                .HasComment("Số lượng tồn kho");

            entity.Property(e => e.Tags).HasMaxLength(1000);

            entity.Property(e => e.UnitCode)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.UnitType)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.Property(e => e.UpdatedByName).HasMaxLength(255);

            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");

            entity.Property(e => e.Warehouse).HasMaxLength(250);

            entity.Property(e => e.Weight).HasColumnType("numeric(18, 5)");

            entity.Property(e => e.Width).HasColumnType("numeric(18, 5)");

            entity.HasOne(d => d.BrandNavigation)
                .WithMany(p => p.Product)
                .HasForeignKey(d => d.BrandId)
                .OnDelete(DeleteBehavior.SetNull)
                .HasConstraintName("FK_Product_ProductBrand");

            entity.HasOne(d => d.CategoryRootNavigation)
                .WithMany(p => p.Product)
                .HasForeignKey(d => d.CategoryRootId)
                .OnDelete(DeleteBehavior.SetNull)
                .HasConstraintName("FK_Product_CategoryRoot");

            entity.HasOne(d => d.DeliveryTime)
                .WithMany(p => p.Product)
                .HasForeignKey(d => d.DeliveryTimeId)
                .OnDelete(DeleteBehavior.SetNull);

            entity.HasOne(d => d.ManufacturerNavigation)
                .WithMany(p => p.Product)
                .HasForeignKey(d => d.ManufacturerId)
                .OnDelete(DeleteBehavior.SetNull)
                .HasConstraintName("FK_Product_Manufacturer");

            entity.HasOne(d => d.OriginNavigation)
                .WithMany(p => p.Product)
                .HasForeignKey(d => d.OriginId)
                .OnDelete(DeleteBehavior.SetNull)
                .HasConstraintName("FK_Product_ProductOrigin");

            entity.HasOne(d => d.ProductTypeNavigation)
                .WithMany(p => p.Product)
                .HasForeignKey(d => d.ProductTypeId)
                .OnDelete(DeleteBehavior.SetNull)
                .HasConstraintName("FK_Product_ProductType");

            entity.HasOne(d => d.TaxCategory)
                .WithMany(p => p.Product)
                .HasForeignKey(d => d.TaxCategoryId)
                .HasConstraintName("FK_Product_TaxCategory");

            entity.HasOne(d => d.Unit)
                .WithMany(p => p.Product)
                .HasForeignKey(d => d.UnitId)
                .OnDelete(DeleteBehavior.SetNull)
                .HasConstraintName("FK_Product_QuantityUnit_QuantityUnitId");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Product> entity);
    }
}
